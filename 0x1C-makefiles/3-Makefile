# Makefile for 'school' executable

# Compiler
CC = gcc

# Source files
SRC = main.c school.c file1.c file2.c

# Object files (automatically generated from source files)
OBJ = $(SRC:.c=.o)

# favorite compiler flags
CFLAGS: -Wall -Werror -Wextra -pedantic
# Executable name
NAME = school

# Program to delete files
RM = rm -f

# Default rule: build the executable
all: $(NAME)

# Rule to build the executable
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) $(OBJ) -o $(NAME)

# Rule to compile source files into object files
%.o: %.c
	$(CC) -c $< -o $@

# Rule to clean Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ .*~ \#* *.sw* $(NAME)

# Rule to delete object files
oclean:
	$(RM) $(OBJ)

# Rule to delete all Emacs and Vim temporary files, the executable, and the object files
fclean: clean oclean
	$(RM) $(NAME)

# Rule to force recompilation of all source files
re: fclean all

# Make sure clean, oclean, fclean, re rules never fail
.PHONY: clean oclean fclean re
